<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我的Hexo-Github博客搭建笔记</title>
      <link href="/2020/04/10/%E6%88%91%E7%9A%84Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/04/10/%E6%88%91%E7%9A%84Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="从零开始搭建个人博客"><a href="#从零开始搭建个人博客" class="headerlink" title="从零开始搭建个人博客"></a>从零开始搭建个人博客</h2><p>主要参考以下链接</p><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a>，<a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">知乎</a>，<a href="https://www.bilibili.com/video/BV1Yb411a7ty" target="_blank" rel="noopener">b站视频</a></p><h3 id="安装依赖包node-js"><a href="#安装依赖包node-js" class="headerlink" title="安装依赖包node.js"></a>安装依赖包node.js</h3><p>Hexo是一款基于<strong>Node.js</strong>的静态博客框架， 所谓巧妇难为无米之炊，要想搭建上层的博客必须先安装底层的node.js，可以直接上<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js官网</a>下载安装，该安装包除了node.js之外还包括node软件包管理工具<strong>npm</strong>。</p><p>后面我们需要用npm来安装hexo相关模块，而在国内首先需要像pip那样更换镜像，如下更换为淘宝镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>使用终端命令安装hexo客户端，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>然后本地新建一个文件夹如blogs，并cd到该路径，执行初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>考虑到每个人命名方式不同，<code>blogs/</code>这里我称为hexo的<strong>根目录</strong>，</p><h3 id="利用本地服务器生成网页"><a href="#利用本地服务器生成网页" class="headerlink" title="利用本地服务器生成网页"></a>利用本地服务器生成网页</h3><p>利用PC端生成服务器开启网页，比后面部署到github pages上刷新要快，可用于测试</p><p>先新建一个题为test的博客，即</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>此时会在主目录<code>source/_posts</code>下生成一个test.md文件，就是我们的第一篇博客test，编辑保存后生成相应网页文件，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>然后开启服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>点击<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a>就可以看到博客网页，终端<code>CTRL+C</code>则关闭本地服务器。</p><h3 id="部署到Github-Pages"><a href="#部署到Github-Pages" class="headerlink" title="部署到Github Pages"></a>部署到Github Pages</h3><p>本地服务器生成的网页别人是没法看到的，因此可以选择部署到github pages上。</p><p>首先Github网页上新建一个repo，名字严格为<code>用户民.github.io</code>，比如我的用户名为<code>JohnJim0816</code>，则相应的仓库名为<code>JohnJim0816.github.io</code>。</p><p>然后本地主目录blogs下，终端运行如下命令安装hexo-deployer-git。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后在主目录的配置文件<code>_config.yml</code>中(这里称之为<b><font color=red>站点配置文件</font></b>，后面还有一个同名的<b><font color=blue>主题配置文件</font></b>)，找到deploy部分，并更改如下，注意repo部分根据个人github用户名(我的为JohnJim0816)而定。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/JohnJim0816/JohnJim0816.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>配置完成之后，使用<code>hexo n test</code> 新建一个博客。<br>然后<code>hexo g</code>生成，然后<code>hexo d</code>发布，也可以<code>hexo g -d</code>将两步合为一步。然后需要等待一段时间，就可以在<code>https://johnjim0816.github.io/</code>看到自己的博客了。</p><p><img src="https://raw.githubusercontent.com/JohnJim0816/blog-figures/master/2020/04/%E6%88%91%E7%9A%84Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/1.png" alt="image1"></p><h2 id="安装next主题来装点博客"><a href="#安装next主题来装点博客" class="headerlink" title="安装next主题来装点博客"></a>安装next主题来装点博客</h2><p>hexo自带的主题是landscape，对应带主目录<code>themes</code>文件夹下，这个主题只能说是平平无奇！！！</p><p>因此需要安装一个靓靓的主题来使我们的博客秀色可餐，这里推荐<a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">next主题</a>，截止2020年4月10日该主题已经更新到了v7.8.0。注意还有一个<a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">iissnan/hexo-theme-next</a>，这个虽然star很多但是已经不维护了，所以推荐前面一个。可以直接下载整个仓库并在本地解压，将名字改为next，然后放到主目录下的<code>themes</code>文件夹下。</p><p>在站点配置文件即<code>blogs/_config.yml</code>中将语言更改为中文，如下，注意冒号之后有一个空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">language: zh-CN</span><br></pre></td></tr></table></figure><p>并且将主题改为next：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure><p>保存之后使用hexo g -d可以看到初步效果，不过在类似于这些测试的操作还是建议在本地服务器上进行，github page刷新的速度简直就是谜一样的存在。</p><h2 id="后续优化"><a href="#后续优化" class="headerlink" title="后续优化"></a>后续优化</h2><h3 id="给本地文章md文件按年月分类"><a href="#给本地文章md文件按年月分类" class="headerlink" title="给本地文章md文件按年月分类"></a>给本地文章md文件按年月分类</h3><p>现在<code>hexo n 文章名</code>会在<code>source/_posts/</code>下创建文件，但是如果文章太多的话放在同一个目录下不好管理，此时可以更改站点配置文件<code>blogs/_config.yml</code>中的<code>new_post_name</code>，如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year/:month/:title.md</span></span><br></pre></td></tr></table></figure><p>这样<code>hexo n 文章名</code>之后会在<code>source/_posts/</code>创建比如2020/04/文章名.md文件，即按年月分类。</p><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p>插入图片这个搞了我好久，首先强烈建议使用图床，常见的可以搜索Github+PigGo。然后文章中直接按如下格式即可。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">fig1</span>](<span class="link">https://raw.githubusercontent.com/JohnJim0816/blog-figures/master/2020/4/10/1.png</span>)</span><br></pre></td></tr></table></figure><p>插入本地图片的方式参考<a href="https://blog.csdn.net/JohnJim0/article/details/105430915" target="_blank" rel="noopener">CSDN</a>，注意hexo-asset-image模块的安装可能会造成文章目录中文乱码的bug，如下：</p><p><img src="https://raw.githubusercontent.com/JohnJim0816/blog-figures/master/2020/04/%E6%88%91%E7%9A%84Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/2.png" alt="image2"></p><h3 id="添加站内搜索"><a href="#添加站内搜索" class="headerlink" title="添加站内搜索"></a>添加站内搜索</h3><p>首先安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>然后站点配置文件<code>blogs/_config.yml</code>添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">./public/search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure><p>主题配置文件<code>themes/next/_config.yml</code>设置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="给网页文章增加分类和标签"><a href="#给网页文章增加分类和标签" class="headerlink" title="给网页文章增加分类和标签"></a>给网页文章增加分类和标签</h3><p>首先<code>hexo n page categories</code>以及<code>hexo n page tags</code>新建目录页和标签页，此时本地<code>source</code>文件夹下会生成相应的文件夹，将比如<code>categories</code>中的index.md更改如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2020-04-10 21:53:23</span><br><span class="line">type: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>关键是type这一项，<code>tags</code>也同理，</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2020-04-10 21:53:46</span><br><span class="line">type: tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>然后在文章开头的Front-matter部分，写上相应分类和标签，如下</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的Hexo-Github博客搭建笔记</span><br><span class="line">date: 2020-04-10 21:29:41</span><br><span class="line">categories: 野生技术</span><br><span class="line">tags: </span><br><span class="line"><span class="bullet">    - </span>hexo</span><br><span class="line"><span class="bullet">    - </span>笔记</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>再到主题配置文件，即<code>themes</code>下的<code>_config.yml</code>文件，找到<code>menu</code>部分，配置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">th</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">tags</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br></pre></td></tr></table></figure><p>其中<code>||</code>后面指向图标的链接，如果没有则图标默认是问号。</p><p>由此可以类推新建一个类似于标签、分类这样的菜单栏，可参考<a href="https://hoxis.github.io/Hexo+Next%20%E6%96%B0%E5%A2%9E%E8%8F%9C%E5%8D%95%E5%88%86%E7%B1%BB%E9%A1%B5%E9%9D%A2.html" target="_blank" rel="noopener">这个博客</a></p><h3 id="增加百度统计"><a href="#增加百度统计" class="headerlink" title="增加百度统计"></a>增加百度统计</h3><p>可参考<a href="http://theme-next.iissnan.com/getting-started.html#theme-settings" target="_blank" rel="noopener">官方文档</a></p><h3 id="如何开启阅读全文"><a href="#如何开启阅读全文" class="headerlink" title="如何开启阅读全文"></a>如何开启阅读全文</h3><p>在文章中加入<code>&lt;!-- more --&gt;</code>即可，参考<a href="https://theme-next.org/docs/theme-settings/posts" target="_blank" rel="noopener">官方文档</a></p><h3 id="增加阅读时间和字数统计"><a href="#增加阅读时间和字数统计" class="headerlink" title="增加阅读时间和字数统计"></a>增加阅读时间和字数统计</h3><p>首先安装hexo-symbols-count-time，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-symbols-count-time --save</span><br></pre></td></tr></table></figure><p>如果之前安装了hexo-wordcount就要卸载掉<code>npm uninstall hexo-wordcount</code>，因为它只适用于老版本，网页也有教程是这个，<br>修改站点配置文件<code>/_config.yml</code>，没有就添加</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">symbols<span class="emphasis">_count_</span>time: </span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  awl: 2</span><br><span class="line">  wpm: 300</span><br></pre></td></tr></table></figure><p>其中awl（Average Word Length）的数值是设定多少字符统计为一个字(word)，中文博客需要设置为 2。wpm（Words Per Minute）是你的阅读速度，多少字（word）统计为阅读时长一分钟。以下是官方文档里的一些阅读速度参考数据：</p><ul><li>慢速：200</li><li>中速：275（默认）</li><li>快速：350</li></ul><p>然后修改主题配置文件<code>next/_config.yml</code>，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">symbols_count_time:</span><br><span class="line">  separated_meta: true</span><br><span class="line">  item_text_post: true</span><br><span class="line">  item_text_total: true</span><br></pre></td></tr></table></figure><p>最后需要<code>hexo clean</code>然后重新生成，否则可能会出现阅读时间NaN字样，参考<a href="https://theme-next.org/docs/theme-settings/posts" target="_blank" rel="noopener">官方</a></p><h3 id="增加valine评论系统"><a href="#增加valine评论系统" class="headerlink" title="增加valine评论系统"></a>增加valine评论系统</h3><p><a href="https://www.zhihu.com/question/267598518" target="_blank" rel="noopener">知乎</a>有关于评论系统的讨论，目前我暂时使用valine评论系统。</p><h4 id="leancloud中进行相关的准备工作"><a href="#leancloud中进行相关的准备工作" class="headerlink" title="leancloud中进行相关的准备工作"></a>leancloud中进行相关的准备工作</h4><p>该评论系统依赖于leancloud，所以需要先在leancloud中进行相关的准备工作。</p><ul><li><p><a href="https://leancloud.cn/dashboard/login.html#/signin" target="_blank" rel="noopener">登录</a> 或 <a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="noopener">注册</a> LeanCloud</p></li><li><p>登录成功后，进入后台点击左上角的创建应用：</p><p><img src="https://raw.githubusercontent.com/JohnJim0816/blog-figures/master/2020/04/%E6%88%91%E7%9A%84Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/3.png" alt="image3"></p></li><li><p>创建好应用，进入应用，左边栏找到 <strong>设置</strong> ，然后点击 <strong>应用Key</strong>，此时记录出现的 <strong>App ID</strong> 和 <strong>App Key</strong>，后面配置文件中会用到</p></li><li><p>因为评论和文章阅读数统计依赖于存储，所以还需要建立两个新的存储 <code>Class</code>，左边栏找到并点击 <strong>存储</strong>，点击 <strong>创建Class</strong>:<br><img src="https://raw.githubusercontent.com/JohnJim0816/blog-figures/master/2020/04/%E6%88%91%E7%9A%84Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/4.png" alt="image4"></p></li><li><p>创建两个存储Class，分别命名为: <code>Counter</code> 和 <code>Comment</code></p></li><li><p>还需要为应用添加安全域名，左边栏点击 <strong>设置</strong>，找到 <strong>安全中心</strong>，点击后会看到 <strong>安全域名</strong> 设置框，输入博客使用的域名(注意下图去掉最后一个”/“)，点击保存即可：<br><img src="https://raw.githubusercontent.com/JohnJim0816/blog-figures/master/2020/04/%E6%88%91%E7%9A%84Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/5.png" alt="image5"></p></li></ul><h4 id="修改主题配置文件next-config-yml"><a href="#修改主题配置文件next-config-yml" class="headerlink" title="修改主题配置文件next/_config.yml"></a>修改主题配置文件<code>next/_config.yml</code></h4><p>找到valine部分，</p><p><img src="https://raw.githubusercontent.com/JohnJim0816/blog-figures/master/2020/04/%E6%88%91%E7%9A%84Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/6.png" alt="image6"></p><p>上面几项内容的含义，这里简单说明需要修改的部分，具体还是要看 <a href="https://valine.js.org/configuration.html" target="_blank" rel="noopener">Valine官网中配置相关的内容</a>：</p><table><thead><tr><th>参数</th><th>用途</th></tr></thead><tbody><tr><td>enable</td><td>这是用于主题中配置的，不是官方Valine的参数，<strong>true</strong>时控制开启此评论系统</td></tr><tr><td>appId</td><td>这是在 <a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud</a> 后台应用中获取的，也就是上面提到的 <strong>App ID</strong></td></tr><tr><td>appKey</td><td>这是在 <a href="https://leancloud.cn/" target="_blank" rel="noopener">leancloud</a> 后台应用中获取的，也就是上面提到的 <strong>App Key</strong></td></tr><tr><td>notify</td><td>用于控制是否开启邮件通知功能，具体参考<a href="https://github.com/xCss/Valine/wiki/Valine-评论系统中的邮件提醒设置" target="_blank" rel="noopener">邮件提醒配置</a></td></tr><tr><td>verify</td><td>用于控制是否开启评论验证码功能</td></tr><tr><td>avatar</td><td>用于配置评论项中用户头像样式，有多种选择：mm, identicon, monsterid, wavatar, retro, hide。详细参考：<a href="https://valine.js.org/avatar.html" target="_blank" rel="noopener">头像配置</a></td></tr><tr><td>placehoder</td><td>评论框的提示符</td></tr><tr><td>visitor</td><td>控制是否开启文章阅读数的统计功能i, 详情阅读<a href="https://valine.js.org/visitor.html" target="_blank" rel="noopener">文章阅读数统计</a></td></tr></tbody></table><blockquote><p>开启阅读次数即将visitor值改为true之后可能会出现首页阅读次数为0而文章页面阅读次数的bug，经验表明遇到这种情况不用管它不用管它不用管它，过阵子会好的。</p></blockquote><h4 id="完善评论通知"><a href="#完善评论通知" class="headerlink" title="完善评论通知"></a>完善评论通知</h4><p><strong>Valine</strong> 评论邮件提醒功能不太健全，通知邮件中没有文章直达链接，<strong>Valine</strong> 官网中提供了评论系统第三方功能扩展<a href="https://github.com/zhaojun1998/Valine-Admin" target="_blank" rel="noopener">Valine</a>链接，按照链接中的说明，非常详细的步骤，一步步很容易实现完备的评论系统后台管理以及邮件提醒功能，部分高级配置<a href="https://github.com/zhaojun1998/Valine-Admin/blob/master/高级配置.md#自定义邮件服务器" target="_blank" rel="noopener">点我</a>了解。</p><h4 id="删除评论"><a href="#删除评论" class="headerlink" title="删除评论"></a>删除评论</h4><p>直接在leancloud后台的存储中找到之前创建的<code>Comment</code>这个<code>class</code>找到对应评论删除即可。</p><p><img src="https://raw.githubusercontent.com/JohnJim0816/blog-figures/master/2020/04/%E6%88%91%E7%9A%84Hexo-Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/7.png" alt="image7"></p>]]></content>
      
      
      <categories>
          
          <category> 野生技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3画动态图并保存视频</title>
      <link href="/2020/04/06/python3%E7%94%BB%E5%8A%A8%E6%80%81%E5%9B%BE%E5%B9%B6%E4%BF%9D%E5%AD%98%E8%A7%86%E9%A2%91/"/>
      <url>/2020/04/06/python3%E7%94%BB%E5%8A%A8%E6%80%81%E5%9B%BE%E5%B9%B6%E4%BF%9D%E5%AD%98%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/JohnJim0816/blog-figures/master/2020/04/python3%E7%94%BB%E5%8A%A8%E6%80%81%E5%9B%BE%E5%B9%B6%E4%BF%9D%E5%AD%98%E8%A7%86%E9%A2%91/%E5%B0%81%E9%9D%A2.jpeg" alt=""></p><h2 id="ion-画动态图"><a href="#ion-画动态图" class="headerlink" title="ion()画动态图"></a>ion()画动态图</h2><p>可以参考<a href="https://www.omegaxyz.com/2018/06/03/python-matplotlib-dynamic-graph/" target="_blank" rel="noopener">网页</a>，具体示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"> </span><br><span class="line">plt.axis([<span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line">plt.ion()</span><br><span class="line"> </span><br><span class="line">xs = [<span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">ys = [<span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    y = np.random.random()</span><br><span class="line">    xs[<span class="number">0</span>] = xs[<span class="number">1</span>]</span><br><span class="line">    ys[<span class="number">0</span>] = ys[<span class="number">1</span>]</span><br><span class="line">    xs[<span class="number">1</span>] = i</span><br><span class="line">    ys[<span class="number">1</span>] = y</span><br><span class="line">    plt.plot(xs, ys) </span><br><span class="line">    plt.pause(<span class="number">0.1</span>)</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="保存视频"><a href="#保存视频" class="headerlink" title="保存视频"></a>保存视频</h2><p>需要安装FFMpegWriter，MAC<code>brew install FFMpegWriter</code>，ubuntu<code>sudo apt-get install FFMpegWriter</code>。在ion()的基础上示例代码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> matplotlib.animation <span class="keyword">import</span> FFMpegWriter</span><br><span class="line"></span><br><span class="line">metadata = dict(title=<span class="string">'Movie Test'</span>, artist=<span class="string">'Matplotlib'</span>,comment=<span class="string">'Movie support!'</span>)</span><br><span class="line">writer = FFMpegWriter(fps=<span class="number">15</span>, metadata=metadata)</span><br><span class="line"></span><br><span class="line">fig = plt.figure()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> writer.saving(fig, <span class="string">"writer_test.mp4"</span>, <span class="number">100</span>):  <span class="comment"># 100指的dpi，dot per inch，表示清晰度</span></span><br><span class="line"></span><br><span class="line">    plt.axis([<span class="number">0</span>, <span class="number">100</span>, <span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line">    plt.ion()</span><br><span class="line">    </span><br><span class="line">    xs = [<span class="number">0</span>, <span class="number">0</span>]</span><br><span class="line">    ys = [<span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">        y = np.random.random()</span><br><span class="line">        xs[<span class="number">0</span>] = xs[<span class="number">1</span>]</span><br><span class="line">        ys[<span class="number">0</span>] = ys[<span class="number">1</span>]</span><br><span class="line">        xs[<span class="number">1</span>] = i</span><br><span class="line">        ys[<span class="number">1</span>] = y</span><br><span class="line">        plt.plot(xs, ys)</span><br><span class="line">        plt.pause(<span class="number">0.1</span>)</span><br><span class="line">        writer.grab_frame()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode编写latex</title>
      <link href="/2019/11/06/VSCode%E7%BC%96%E5%86%99latex/"/>
      <url>/2019/11/06/VSCode%E7%BC%96%E5%86%99latex/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>由于latex相关软件的编辑界面不太舒服，加上笔者钟情于VSCode，而网上没有一个简单易用的VSCode搭建教程，故有此书。</p><p>编写latex的工具也多种多样，各有所爱，使用latex环境自带的编辑器固然无可厚非，然界面过于鄙陋，且无法实时编译预览，因而需要结合第三方文本编辑器，有结合ctex，有使用notepad++，而笔者更钟情于VSCode。VSCode的美妙无可言语，亦不多言，以下直接切入正题，如何使用VSCode编写latex，或者说搭建latex环境。</p><a id="more"></a><h2 id="安装Latex环境"><a href="#安装Latex环境" class="headerlink" title="安装Latex环境"></a>安装Latex环境</h2><p>Latex环境即Tex Live，见<a href="https://www.tug.org/texlive/" target="_blank" rel="noopener">参考链接1.1</a><br>不同系统有不同的版本，并且还有完整版和简化版，这里给出全是不同系统完整版的传送门<br><a href="http://www.tug.org/mactex/mactex-download.html" target="_blank" rel="noopener">MacTex下载链接</a><br>WIN上texlive可以现在在线安装版，也可以下载离线安装iso版本，由于网速问题，推荐下载离线iso的镜像<br><a href="https://mirrors.tuna.tsinghua.edu.cn/ctan/systems/texlive/Images/" target="_blank" rel="noopener">texlive iso清华镜像下载</a><br><a href="https://jingyan.baidu.com/article/4f34706e6e1c85e387b56dae.html" target="_blank" rel="noopener">texlive iso安装教程</a></p><h2 id="LaTeX-Workshop"><a href="#LaTeX-Workshop" class="headerlink" title="LaTeX Workshop"></a>LaTeX Workshop</h2><p>此乃VSCode插件，搜索安装即可，该插件的作用即将latex环境和第三方编辑器VSCode结合，使得在VSCode中能够调用latex环境。至于VSCode如何安装插件比较简单，可自查。</p><h2 id="设置settings-json-针对中文"><a href="#设置settings-json-针对中文" class="headerlink" title="设置settings.json(针对中文)"></a>设置settings.json(针对中文)</h2><p><a href="https://blog.csdn.net/WinstonLau/article/details/89467446" target="_blank" rel="noopener">mac参考链接</a><br><a href="https://zhuanlan.zhihu.com/p/38178015" target="_blank" rel="noopener">win参考链接</a><br>以上给出两个关于配置VSCode内settings.json的参考链接，实际上不管什么系统，配置都是一样的，如下：<br>快捷键cmd(ctrl)+shift+p输入setting打开settings.json把以下代码加入，注意在原本内容的最后一行加上英文逗号换行再复制粘贴，不然会报错</p><p>此外如果需要支持中文路径下的文件，需要把以下内容中的%DOC%改为%DOCFILE%”，但此处笔者建议涉及代码方面不要用中文路径。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">"latex-workshop.view.pdf.viewer": "tab",</span><br><span class="line">    "latex-workshop.latex.tools": [</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">          <span class="attr">"command"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">          <span class="attr">"args"</span>: [</span><br><span class="line">              <span class="string">"-synctex=1"</span>,</span><br><span class="line">              <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">              <span class="string">"-file-line-error"</span>,</span><br><span class="line">              <span class="string">"-pdf"</span>,</span><br><span class="line">              <span class="string">"%DOC%"</span></span><br><span class="line">          ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">          <span class="attr">"command"</span>: <span class="string">"latexmk"</span>,</span><br><span class="line">          <span class="attr">"args"</span>: [</span><br><span class="line">              <span class="string">"-synctex=1"</span>,</span><br><span class="line">              <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">              <span class="string">"-file-line-error"</span>,</span><br><span class="line">              <span class="string">"-pdf"</span>,</span><br><span class="line">              <span class="string">"%DOC%"</span></span><br><span class="line">          ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">          <span class="attr">"command"</span>: <span class="string">"pdflatex"</span>,</span><br><span class="line">          <span class="attr">"args"</span>: [</span><br><span class="line">              <span class="string">"-synctex=1"</span>,</span><br><span class="line">              <span class="string">"-interaction=nonstopmode"</span>,</span><br><span class="line">              <span class="string">"-file-line-error"</span>,</span><br><span class="line">              <span class="string">"%DOC%"</span></span><br><span class="line">          ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">          <span class="attr">"command"</span>: <span class="string">"bibtex"</span>,</span><br><span class="line">          <span class="attr">"args"</span>: [</span><br><span class="line">              <span class="string">"%DOCFILE%"</span></span><br><span class="line">          ]</span><br><span class="line">      &#125;</span><br><span class="line">  ],</span><br><span class="line">  "latex-workshop.latex.recipes": [</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"xelatex"</span>,</span><br><span class="line">          <span class="attr">"tools"</span>: [</span><br><span class="line">              <span class="string">"xelatex"</span></span><br><span class="line">          ]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"pdflatex -&gt; bibtex -&gt; pdflatex*2"</span>,</span><br><span class="line">          <span class="attr">"tools"</span>: [</span><br><span class="line">              <span class="string">"pdflatex"</span>,</span><br><span class="line">              <span class="string">"bibtex"</span>,</span><br><span class="line">              <span class="string">"pdflatex"</span>,</span><br><span class="line">              <span class="string">"pdflatex"</span></span><br><span class="line">          ]</span><br><span class="line">      &#125;</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure><h2 id="demo"><a href="#demo" class="headerlink" title="demo"></a>demo</h2><p>在 <strong>英文</strong> 路径下新建一个.tex文件，输入代码如下，注意首行\documentclass[UTF8]{ctexart} 用于支持中文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[UTF8]&#123;ctexart&#125; </span><br><span class="line">\title&#123;你好，world!&#125;</span><br><span class="line">\author&#123;Winston&#125;</span><br><span class="line">\date&#123;\today&#125;</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">\maketitle</span><br><span class="line">你好，world！</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure><p>然后cmd(ctrl)+s保存编译，就会生成.aux、.pdf等文件，注意保存的过程同时也是编译的过程，然后打开右上角预览就会看到生成的pdf</p>]]></content>
      
      
      <categories>
          
          <category> 野生技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> latex </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
